name: CI

on:
  workflow_dispatch:
  push:
    branches: [develop, staging]
jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    secrets: inherit
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit
  build:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_RELEASE_IMAGE=ghcr.io/aura-nw/erascope:${GITHUB_REF_NAME}_${SHORT_SHA_COMMIT} >> $GITHUB_ENV
      - name: Build the Docker image and push it to the registry
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./ci/build.sh
  build-hasura-metadata:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_RELEASE_IMAGE=ghcr.io/aura-nw/horoscope-hasura:${GITHUB_REF_NAME}_${SHORT_SHA_COMMIT} >> $GITHUB_ENV
      - name: Check hasura changes
        id: NUMBER_CHANGES
        run: |
          STATUS=`git diff HEAD^ HEAD hasura`
          NUMBER_CHANGES=${#STATUS}
          echo $NUMBER_CHANGES
          echo NUMBER_CHANGES=$NUMBER_CHANGES >> $GITHUB_OUTPUT
      - name: Build and push
        if: ${{steps.NUMBER_CHANGES.outputs.NUMBER_CHANGES != 0}}
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.hasura
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            ${{ env.CONTAINER_RELEASE_IMAGE }}
    outputs:
      NUMBER_CHANGES: ${{ steps.NUMBER_CHANGES.outputs.NUMBER_CHANGES }}

  update-manifest:
    runs-on: [ubuntu-latest]
    needs: [lint, test, build]
    steps:
      - uses: actions/checkout@v3
      - uses: imranismail/setup-kustomize@v2
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_RELEASE_IMAGE=ghcr.io/aura-nw/erascope:${GITHUB_REF_NAME}_${SHORT_SHA_COMMIT} >> $GITHUB_ENV
          echo REPO_MANIFEST_NAME=gitops >> $GITHUB_ENV
          echo REPO_MANIFEST_URL=github.com/aura-nw/gitops.git >> $GITHUB_ENV
          echo REPO_MANIFEST_BRANCH=master >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_DEV=./clusters/k8s-dev/horoscope-v2/horoscope-crawl-auratestnet >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_STAGING=./clusters/k8s-testnet-euphoria/horoscope-v2/horoscope-crawl-euphoria >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_MAIN=./clusters/k8s-prod/horoscope-v2/horoscope-crawl-xstaxy >> $GITHUB_ENV
          echo REPO_MANIFEST_TAG_IMAGE=image_erascope >> $GITHUB_ENV
      - name: Update manifest
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          ./ci/updateManifest.sh
  update-manifest-hasura:
    runs-on: [ubuntu-latest]
    needs: [build-hasura-metadata]
    if: ${{needs.build-hasura-metadata.outputs.NUMBER_CHANGES != 0}}
    steps:
      - uses: actions/checkout@v3
      - uses: imranismail/setup-kustomize@v2
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_RELEASE_IMAGE=ghcr.io/aura-nw/horoscope-hasura:${GITHUB_REF_NAME}_${SHORT_SHA_COMMIT} >> $GITHUB_ENV
          echo REPO_MANIFEST_NAME=gitops >> $GITHUB_ENV
          echo REPO_MANIFEST_URL=github.com/aura-nw/gitops.git >> $GITHUB_ENV
          echo REPO_MANIFEST_BRANCH=master >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_DEV=./clusters/k8s-dev/horoscope-v2/horoscope-crawl-auratestnet >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_STAGING=./clusters/k8s-testnet-euphoria/horoscope-v2/horoscope-crawl-euphoria >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_MAIN=./clusters/k8s-prod/horoscope-v2/horoscope-crawl-xstaxy >> $GITHUB_ENV
          echo REPO_MANIFEST_TAG_IMAGE=image_hasura >> $GITHUB_ENV
      - name: Update manifest
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          ./ci/updateManifest.sh
