{
  "name": "verana-indexer",
  "version": "1.0.1",
  "main": "index.js",
  "license": "MIT",
  "type": "module",
  "packageManager": "pnpm@10.14.0",
  "_moduleAliases": {
    "@base": "src/base"
  },
  "scripts": {
    "clean": "rimraf ./dist/",
    "docker": "pnpm run up && pnpm run db:migrate:latest && pnpm run dev",
    "start": "node ./node_modules/moleculer/bin/moleculer-runner.mjs --env --config ./dist/src/moleculer.config.js ./dist/src/services/**/*.service.js",
    "dev": "cross-env NODE_OPTIONS=--loader=ts-node/esm node ./node_modules/moleculer/bin/moleculer-runner.mjs --hot --repl --env --config ./src/moleculer.config.ts",
    "watch": "nodemon",
    "db:migrate:make": "cross-env NODE_OPTIONS=\"--loader ts-node/esm\" knex migrate:make --knexfile knexfile.ts -x ts",
    "db:migrate:latest": "cross-env node ./node_modules/knex/bin/cli.js migrate:latest --knexfile ./dist/knexfile.js",
    "db:migrate:rollback": "cross-env NODE_OPTIONS=\"--loader ts-node/esm\" knex migrate:rollback --knexfile knexfile.ts",
    "db:migrate:test:latest": "cross-env DOTENV_CONFIG_PATH=./.env NODE_ENV=test node --loader ts-node/esm node_modules/knex/bin/cli.js migrate:latest --knexfile knexfile.ts",
    "db:migrate:test:rollback": "cross-env DOTENV_CONFIG_PATH=./.env NODE_ENV=test node --loader ts-node/esm node_modules/knex/bin/cli.js migrate:rollback --knexfile knexfile.ts",
    "db:seed:make": "env DOTENV_CONFIG_PATH=./.env ts-node --require dotenv/config ./node_modules/.bin/knex seed:make",
    "build": "pnpm run clean && tsc --project tsconfig.build.json && node fix-imports.cjs",
    "up": "docker-compose up -d",
    "stop": "docker-compose stop",
    "down": "docker-compose down",
    "jest": "jest",
    "test": "docker compose up aurad -d && jest --verbose --runInBand --forceExit && docker compose stop aurad && docker rm aurad_erascope",
    "test-ci": "jest --verbose --runInBand --forceExit --passWithNoTests",
    "test-watch": "pnpm run jest --watch",
    "test-coverage": "pnpm run jest --coverage",
    "lint": "eslint \"src/**/*.{ts,tsx,js}\" --cache --cache-location .eslintcache --no-error-on-unmatched-pattern --max-warnings=9999"
  },
  "nodemonConfig": {
    "ignore": [
      "**/*.test.ts",
      "**/*.spec.ts",
      ".git",
      "node_modules"
    ],
    "watch": [
      "src"
    ],
    "exec": "node --loader ts-node/esm --experimental-specifier-resolution=node ./node_modules/moleculer/bin/moleculer-runner.mjs --hot --repl --env --config src/moleculer.config.ts",
    "ext": "ts, js"
  },
  "dependencies": {
    "@aura-nw/aurajs": "0.1.10",
    "@bull-board/api": "^5.23.0",
    "@bull-board/express": "^5.23.0",
    "@cosmjs/cosmwasm-stargate": "^0.30.1",
    "@cosmjs/encoding": "^0.32.4",
    "@cosmjs/json-rpc": "^0.29.5",
    "@cosmjs/proto-signing": "^0.29.5",
    "@cosmjs/stargate": "^0.31.3",
    "@cosmjs/tendermint-rpc": "^0.30.1",
    "@cosmjs/utils": "^0.29.5",
    "@ethereum-sourcify/lib-sourcify": "^1.13.0",
    "@evmos/address-converter": "^0.1.9",
    "@horoscope/evmos-proto": "0.0.8",
    "@horoscope/sei-js-proto": "3.1.9",
    "@jest/types": "30.0.5",
    "@osmonauts/lcd": "^0.10.0",
    "@ourparentcenter/moleculer-decorators-extended": "^1.1.1",
    "@shazow/whatsabi": "^0.11.0",
    "@tendermint/amino-js": "^0.6.2",
    "@types/parse-uri": "^1.0.2",
    "@types/swagger-ui-dist": "3.30.6",
    "ajv-formats": "^2.1.1",
    "axios": "^1.12.2",
    "bignumber.js": "^9.3.1",
    "bull": "^4.16.5",
    "bullmq": "^3.16.2",
    "busboy": "^1.6.0",
    "cosmjs-types": "^0.6.1",
    "dayjs": "^1.11.18",
    "dotenv": "^16.6.1",
    "ethers": "^6.15.0",
    "file-type": "^18.7.0",
    "graphql": "^16.11.0",
    "graphql-tag": "^2.12.6",
    "ioredis": "^5.8.1",
    "is-ipfs": "^8.0.4",
    "knex": "^2.5.1",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "long": "^5.3.2",
    "mkdirp": "^1.0.4",
    "moleculer": "^0.14.35",
    "moleculer-auto-openapi": "^1.1.6",
    "moleculer-bull": "^0.3.1",
    "moleculer-db": "^0.8.29",
    "moleculer-web": "^0.10.8",
    "mysql": "^2.18.1",
    "node-fetch": "^3.3.2",
    "objection": "^3.1.5",
    "parse-uri": "^1.0.16",
    "pg": "^8.16.3",
    "pg-hstore": "^2.3.4",
    "protobufjs": "7.5.4",
    "redisuri": "^1.1.2",
    "reflect-metadata": "^0.1.14",
    "semver": "^7.7.3",
    "stream-chain": "^2.2.5",
    "stream-json": "^1.9.1",
    "swagger-ui-dist": "5.29.5",
    "underscore": "^1.13.7",
    "util": "^0.12.5",
    "viem": "^2.38.2",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@babel/core": "7.28.0",
    "@babel/plugin-proposal-decorators": "7.28.0",
    "@babel/preset-env": "7.28.0",
    "@babel/preset-typescript": "7.27.1",
    "@commitlint/cli": "^17.8.1",
    "@commitlint/config-conventional": "^17.8.1",
    "@jest-decorated/core": "^0.1.7",
    "@jest/globals": "^29.7.0",
    "@osmonauts/lcd": "^0.10.0",
    "@tsconfig/node16": "^1.0.4",
    "@types/jest": "30.0.0",
    "@types/jest-when": "^3.5.5",
    "@types/lodash": "^4.17.20",
    "@types/mkdirp": "^1.0.2",
    "@types/node": "^18.19.130",
    "@types/semver": "7.7.0",
    "@types/stream-chain": "^2.1.0",
    "@types/stream-json": "^1.7.8",
    "@types/underscore": "^1.13.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "7.8.0",
    "@typescript-eslint/parser": "7.8.0",
    "ajv-formats": "^2.1.1",
    "babel-jest": "30.0.5",
    "cross-env": "^10.1.0",
    "eslint": "^8.57.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^18.0.0",
    "eslint-config-prettier": "^8.10.2",
    "eslint-import-resolver-typescript": "^3.10.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^4.2.5",
    "jest": "29.7.0",
    "jest-config": "30.0.5",
    "jest-light-runner": "^0.4.1",
    "jest-mock": "29.7.0",
    "lint-staged": "^13.3.0",
    "moleculer-repl": "^0.7.4",
    "prettier": "^2.8.8",
    "rimraf": "6.0.1",
    "ts-jest": "^29.4.5",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "5.9.2"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node",
    "transpileOnly": true,
    "compilerOptions": {
      "module": "NodeNext",
      "moduleResolution": "NodeNext"
    }
  }
}