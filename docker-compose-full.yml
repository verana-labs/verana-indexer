version: "2.4"

services:
  indexer:
    image: verana-indexer:dev
    container_name: indexer_erascope
    environment:
      SERVICEDIR: dist/src/services
      SERVICES: '**/*.service.js'
      TRANSPORTER: redis://redis:6379
      CACHER: redis://redis:6379
      QUEUE_JOB_REDIS: redis://redis:6379
      NODE_ENV: production
      NAMESPACE: verana
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: psql
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "3001:3001"
    networks:
      - dev_network

  psql:
    # PostgreSQL
    image: postgres:14-alpine
    #build: ./docker/psql/
    container_name: psql_erascope
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata2:/var/lib/postgresql/data
    networks:
      - dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Redis
  redis:
    image: redis:latest
    container_name: redis_erascope
    ports:
      - "6379:6379"
    networks:
      - dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  dev_network:

volumes:
  pgdata2:
