// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v6.32.1
// source: tx.proto

/* eslint-disable */
import Long from "long";
import _m0 from "protobufjs/minimal";
import { Timestamp } from "./google/protobuf/timestamp";
import { Params } from "./params";
import { PermissionType, permissionTypeFromJSON, permissionTypeToJSON } from "./types";

export const protobufPackage = "verana.perm.v1";

/** MsgUpdateParams is the Msg/UpdateParams request type. */
export interface MsgUpdateParams {
  /** authority is the address that controls the module (defaults to x/gov unless overwritten). */
  authority: string;
  /**
   * params defines the module parameters to update.
   *
   * NOTE: All parameters must be supplied.
   */
  params?: Params | undefined;
}

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 */
export interface MsgUpdateParamsResponse {
}

/** MsgStartPermissionVP represents a message to start a permission validation process */
export interface MsgStartPermissionVP {
  creator: string;
  type: number;
  validatorPermId: number;
  country: string;
  /** optional */
  did: string;
}

/** MsgStartPermissionVPResponse defines the Msg/StartPermissionVP response type */
export interface MsgStartPermissionVPResponse {
  permissionId: number;
}

/** MsgRenewPermissionVP represents a message to renew a permission validation process */
export interface MsgRenewPermissionVP {
  creator: string;
  /** ID of the permission to renew */
  id: number;
}

/** MsgRenewPermissionVPResponse defines the Msg/RenewPermissionVP response type */
export interface MsgRenewPermissionVPResponse {
}

/** MsgSetPermissionVPToValidated represents a message to set a permission validation process to validated state */
export interface MsgSetPermissionVPToValidated {
  creator: string;
  id: number;
  effectiveUntil?: Date | undefined;
  validationFees: number;
  issuanceFees: number;
  verificationFees: number;
  country: string;
  vpSummaryDigestSri: string;
}

/** MsgSetPermissionVPToValidatedResponse defines the Msg/SetPermissionVPToValidated response type */
export interface MsgSetPermissionVPToValidatedResponse {
}

/** MsgRequestPermissionVPTermination represents a message to request termination of a permission validation process */
export interface MsgRequestPermissionVPTermination {
  creator: string;
  /** id of the validation process */
  id: number;
}

/** MsgRequestPermissionVPTerminationResponse defines the Msg/RequestPermissionVPTermination response type */
export interface MsgRequestPermissionVPTerminationResponse {
}

export interface MsgConfirmPermissionVPTermination {
  creator: string;
  /** Permission ID */
  id: number;
}

export interface MsgConfirmPermissionVPTerminationResponse {
}

export interface MsgCancelPermissionVPLastRequest {
  creator: string;
  /** Permission ID */
  id: number;
}

export interface MsgCancelPermissionVPLastRequestResponse {
}

export interface MsgCreateRootPermission {
  creator: string;
  schemaId: number;
  did: string;
  country: string;
  effectiveFrom?: Date | undefined;
  effectiveUntil?: Date | undefined;
  validationFees: number;
  issuanceFees: number;
  verificationFees: number;
}

export interface MsgCreateRootPermissionResponse {
  /** ID of the created permission */
  id: number;
}

export interface MsgExtendPermission {
  creator: string;
  /** Permission ID */
  id: number;
  effectiveUntil?: Date | undefined;
}

export interface MsgExtendPermissionResponse {
}

export interface MsgRevokePermission {
  creator: string;
  /** Permission ID */
  id: number;
}

export interface MsgRevokePermissionResponse {
}

export interface MsgCreateOrUpdatePermissionSession {
  creator: string;
  /** UUID */
  id: string;
  issuerPermId: number;
  verifierPermId: number;
  agentPermId: number;
  walletAgentPermId: number;
}

export interface MsgCreateOrUpdatePermissionSessionResponse {
  id: string;
}

export interface MsgSlashPermissionTrustDeposit {
  creator: string;
  id: number;
  amount: number;
}

export interface MsgSlashPermissionTrustDepositResponse {
}

export interface MsgRepayPermissionSlashedTrustDeposit {
  creator: string;
  id: number;
}

export interface MsgRepayPermissionSlashedTrustDepositResponse {
}

export interface MsgCreatePermission {
  creator: string;
  schemaId: number;
  type: PermissionType;
  did: string;
  country: string;
  effectiveFrom?: Date | undefined;
  effectiveUntil?: Date | undefined;
  verificationFees: number;
}

export interface MsgCreatePermissionResponse {
  id: number;
}

function createBaseMsgUpdateParams(): MsgUpdateParams {
  return { authority: "", params: undefined };
}

export const MsgUpdateParams = {
  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.authority !== "") {
      writer.uint32(10).string(message.authority);
    }
    if (message.params !== undefined) {
      Params.encode(message.params, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgUpdateParams();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.authority = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.params = Params.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgUpdateParams {
    return {
      authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,
    };
  },

  toJSON(message: MsgUpdateParams): unknown {
    const obj: any = {};
    if (message.authority !== "") {
      obj.authority = message.authority;
    }
    if (message.params !== undefined) {
      obj.params = Params.toJSON(message.params);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgUpdateParams>, I>>(base?: I): MsgUpdateParams {
    return MsgUpdateParams.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgUpdateParams>, I>>(object: I): MsgUpdateParams {
    const message = createBaseMsgUpdateParams();
    message.authority = object.authority ?? "";
    message.params = (object.params !== undefined && object.params !== null)
      ? Params.fromPartial(object.params)
      : undefined;
    return message;
  },
};

function createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {
  return {};
}

export const MsgUpdateParamsResponse = {
  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgUpdateParamsResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgUpdateParamsResponse {
    return {};
  },

  toJSON(_: MsgUpdateParamsResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgUpdateParamsResponse>, I>>(base?: I): MsgUpdateParamsResponse {
    return MsgUpdateParamsResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgUpdateParamsResponse>, I>>(_: I): MsgUpdateParamsResponse {
    const message = createBaseMsgUpdateParamsResponse();
    return message;
  },
};

function createBaseMsgStartPermissionVP(): MsgStartPermissionVP {
  return { creator: "", type: 0, validatorPermId: 0, country: "", did: "" };
}

export const MsgStartPermissionVP = {
  encode(message: MsgStartPermissionVP, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.type !== 0) {
      writer.uint32(16).uint32(message.type);
    }
    if (message.validatorPermId !== 0) {
      writer.uint32(24).uint64(message.validatorPermId);
    }
    if (message.country !== "") {
      writer.uint32(34).string(message.country);
    }
    if (message.did !== "") {
      writer.uint32(42).string(message.did);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgStartPermissionVP {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgStartPermissionVP();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.type = reader.uint32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.validatorPermId = longToNumber(reader.uint64() as Long);
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.country = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.did = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgStartPermissionVP {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      type: isSet(object.type) ? globalThis.Number(object.type) : 0,
      validatorPermId: isSet(object.validatorPermId) ? globalThis.Number(object.validatorPermId) : 0,
      country: isSet(object.country) ? globalThis.String(object.country) : "",
      did: isSet(object.did) ? globalThis.String(object.did) : "",
    };
  },

  toJSON(message: MsgStartPermissionVP): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.type !== 0) {
      obj.type = Math.round(message.type);
    }
    if (message.validatorPermId !== 0) {
      obj.validatorPermId = Math.round(message.validatorPermId);
    }
    if (message.country !== "") {
      obj.country = message.country;
    }
    if (message.did !== "") {
      obj.did = message.did;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgStartPermissionVP>, I>>(base?: I): MsgStartPermissionVP {
    return MsgStartPermissionVP.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgStartPermissionVP>, I>>(object: I): MsgStartPermissionVP {
    const message = createBaseMsgStartPermissionVP();
    message.creator = object.creator ?? "";
    message.type = object.type ?? 0;
    message.validatorPermId = object.validatorPermId ?? 0;
    message.country = object.country ?? "";
    message.did = object.did ?? "";
    return message;
  },
};

function createBaseMsgStartPermissionVPResponse(): MsgStartPermissionVPResponse {
  return { permissionId: 0 };
}

export const MsgStartPermissionVPResponse = {
  encode(message: MsgStartPermissionVPResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.permissionId !== 0) {
      writer.uint32(8).uint64(message.permissionId);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgStartPermissionVPResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgStartPermissionVPResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.permissionId = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgStartPermissionVPResponse {
    return { permissionId: isSet(object.permissionId) ? globalThis.Number(object.permissionId) : 0 };
  },

  toJSON(message: MsgStartPermissionVPResponse): unknown {
    const obj: any = {};
    if (message.permissionId !== 0) {
      obj.permissionId = Math.round(message.permissionId);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgStartPermissionVPResponse>, I>>(base?: I): MsgStartPermissionVPResponse {
    return MsgStartPermissionVPResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgStartPermissionVPResponse>, I>>(object: I): MsgStartPermissionVPResponse {
    const message = createBaseMsgStartPermissionVPResponse();
    message.permissionId = object.permissionId ?? 0;
    return message;
  },
};

function createBaseMsgRenewPermissionVP(): MsgRenewPermissionVP {
  return { creator: "", id: 0 };
}

export const MsgRenewPermissionVP = {
  encode(message: MsgRenewPermissionVP, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRenewPermissionVP {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRenewPermissionVP();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgRenewPermissionVP {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
    };
  },

  toJSON(message: MsgRenewPermissionVP): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRenewPermissionVP>, I>>(base?: I): MsgRenewPermissionVP {
    return MsgRenewPermissionVP.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRenewPermissionVP>, I>>(object: I): MsgRenewPermissionVP {
    const message = createBaseMsgRenewPermissionVP();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgRenewPermissionVPResponse(): MsgRenewPermissionVPResponse {
  return {};
}

export const MsgRenewPermissionVPResponse = {
  encode(_: MsgRenewPermissionVPResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRenewPermissionVPResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRenewPermissionVPResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgRenewPermissionVPResponse {
    return {};
  },

  toJSON(_: MsgRenewPermissionVPResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRenewPermissionVPResponse>, I>>(base?: I): MsgRenewPermissionVPResponse {
    return MsgRenewPermissionVPResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRenewPermissionVPResponse>, I>>(_: I): MsgRenewPermissionVPResponse {
    const message = createBaseMsgRenewPermissionVPResponse();
    return message;
  },
};

function createBaseMsgSetPermissionVPToValidated(): MsgSetPermissionVPToValidated {
  return {
    creator: "",
    id: 0,
    effectiveUntil: undefined,
    validationFees: 0,
    issuanceFees: 0,
    verificationFees: 0,
    country: "",
    vpSummaryDigestSri: "",
  };
}

export const MsgSetPermissionVPToValidated = {
  encode(message: MsgSetPermissionVPToValidated, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    if (message.effectiveUntil !== undefined) {
      Timestamp.encode(toTimestamp(message.effectiveUntil), writer.uint32(26).fork()).ldelim();
    }
    if (message.validationFees !== 0) {
      writer.uint32(32).uint64(message.validationFees);
    }
    if (message.issuanceFees !== 0) {
      writer.uint32(40).uint64(message.issuanceFees);
    }
    if (message.verificationFees !== 0) {
      writer.uint32(48).uint64(message.verificationFees);
    }
    if (message.country !== "") {
      writer.uint32(58).string(message.country);
    }
    if (message.vpSummaryDigestSri !== "") {
      writer.uint32(66).string(message.vpSummaryDigestSri);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetPermissionVPToValidated {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgSetPermissionVPToValidated();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.effectiveUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.validationFees = longToNumber(reader.uint64() as Long);
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.issuanceFees = longToNumber(reader.uint64() as Long);
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.verificationFees = longToNumber(reader.uint64() as Long);
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.country = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.vpSummaryDigestSri = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgSetPermissionVPToValidated {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
      effectiveUntil: isSet(object.effectiveUntil) ? fromJsonTimestamp(object.effectiveUntil) : undefined,
      validationFees: isSet(object.validationFees) ? globalThis.Number(object.validationFees) : 0,
      issuanceFees: isSet(object.issuanceFees) ? globalThis.Number(object.issuanceFees) : 0,
      verificationFees: isSet(object.verificationFees) ? globalThis.Number(object.verificationFees) : 0,
      country: isSet(object.country) ? globalThis.String(object.country) : "",
      vpSummaryDigestSri: isSet(object.vpSummaryDigestSri) ? globalThis.String(object.vpSummaryDigestSri) : "",
    };
  },

  toJSON(message: MsgSetPermissionVPToValidated): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    if (message.effectiveUntil !== undefined) {
      obj.effectiveUntil = message.effectiveUntil.toISOString();
    }
    if (message.validationFees !== 0) {
      obj.validationFees = Math.round(message.validationFees);
    }
    if (message.issuanceFees !== 0) {
      obj.issuanceFees = Math.round(message.issuanceFees);
    }
    if (message.verificationFees !== 0) {
      obj.verificationFees = Math.round(message.verificationFees);
    }
    if (message.country !== "") {
      obj.country = message.country;
    }
    if (message.vpSummaryDigestSri !== "") {
      obj.vpSummaryDigestSri = message.vpSummaryDigestSri;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgSetPermissionVPToValidated>, I>>(base?: I): MsgSetPermissionVPToValidated {
    return MsgSetPermissionVPToValidated.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgSetPermissionVPToValidated>, I>>(
    object: I,
  ): MsgSetPermissionVPToValidated {
    const message = createBaseMsgSetPermissionVPToValidated();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    message.effectiveUntil = object.effectiveUntil ?? undefined;
    message.validationFees = object.validationFees ?? 0;
    message.issuanceFees = object.issuanceFees ?? 0;
    message.verificationFees = object.verificationFees ?? 0;
    message.country = object.country ?? "";
    message.vpSummaryDigestSri = object.vpSummaryDigestSri ?? "";
    return message;
  },
};

function createBaseMsgSetPermissionVPToValidatedResponse(): MsgSetPermissionVPToValidatedResponse {
  return {};
}

export const MsgSetPermissionVPToValidatedResponse = {
  encode(_: MsgSetPermissionVPToValidatedResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetPermissionVPToValidatedResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgSetPermissionVPToValidatedResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgSetPermissionVPToValidatedResponse {
    return {};
  },

  toJSON(_: MsgSetPermissionVPToValidatedResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgSetPermissionVPToValidatedResponse>, I>>(
    base?: I,
  ): MsgSetPermissionVPToValidatedResponse {
    return MsgSetPermissionVPToValidatedResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgSetPermissionVPToValidatedResponse>, I>>(
    _: I,
  ): MsgSetPermissionVPToValidatedResponse {
    const message = createBaseMsgSetPermissionVPToValidatedResponse();
    return message;
  },
};

function createBaseMsgRequestPermissionVPTermination(): MsgRequestPermissionVPTermination {
  return { creator: "", id: 0 };
}

export const MsgRequestPermissionVPTermination = {
  encode(message: MsgRequestPermissionVPTermination, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRequestPermissionVPTermination {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRequestPermissionVPTermination();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgRequestPermissionVPTermination {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
    };
  },

  toJSON(message: MsgRequestPermissionVPTermination): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRequestPermissionVPTermination>, I>>(
    base?: I,
  ): MsgRequestPermissionVPTermination {
    return MsgRequestPermissionVPTermination.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRequestPermissionVPTermination>, I>>(
    object: I,
  ): MsgRequestPermissionVPTermination {
    const message = createBaseMsgRequestPermissionVPTermination();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgRequestPermissionVPTerminationResponse(): MsgRequestPermissionVPTerminationResponse {
  return {};
}

export const MsgRequestPermissionVPTerminationResponse = {
  encode(_: MsgRequestPermissionVPTerminationResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRequestPermissionVPTerminationResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRequestPermissionVPTerminationResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgRequestPermissionVPTerminationResponse {
    return {};
  },

  toJSON(_: MsgRequestPermissionVPTerminationResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRequestPermissionVPTerminationResponse>, I>>(
    base?: I,
  ): MsgRequestPermissionVPTerminationResponse {
    return MsgRequestPermissionVPTerminationResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRequestPermissionVPTerminationResponse>, I>>(
    _: I,
  ): MsgRequestPermissionVPTerminationResponse {
    const message = createBaseMsgRequestPermissionVPTerminationResponse();
    return message;
  },
};

function createBaseMsgConfirmPermissionVPTermination(): MsgConfirmPermissionVPTermination {
  return { creator: "", id: 0 };
}

export const MsgConfirmPermissionVPTermination = {
  encode(message: MsgConfirmPermissionVPTermination, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConfirmPermissionVPTermination {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgConfirmPermissionVPTermination();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgConfirmPermissionVPTermination {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
    };
  },

  toJSON(message: MsgConfirmPermissionVPTermination): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgConfirmPermissionVPTermination>, I>>(
    base?: I,
  ): MsgConfirmPermissionVPTermination {
    return MsgConfirmPermissionVPTermination.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgConfirmPermissionVPTermination>, I>>(
    object: I,
  ): MsgConfirmPermissionVPTermination {
    const message = createBaseMsgConfirmPermissionVPTermination();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgConfirmPermissionVPTerminationResponse(): MsgConfirmPermissionVPTerminationResponse {
  return {};
}

export const MsgConfirmPermissionVPTerminationResponse = {
  encode(_: MsgConfirmPermissionVPTerminationResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConfirmPermissionVPTerminationResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgConfirmPermissionVPTerminationResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgConfirmPermissionVPTerminationResponse {
    return {};
  },

  toJSON(_: MsgConfirmPermissionVPTerminationResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgConfirmPermissionVPTerminationResponse>, I>>(
    base?: I,
  ): MsgConfirmPermissionVPTerminationResponse {
    return MsgConfirmPermissionVPTerminationResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgConfirmPermissionVPTerminationResponse>, I>>(
    _: I,
  ): MsgConfirmPermissionVPTerminationResponse {
    const message = createBaseMsgConfirmPermissionVPTerminationResponse();
    return message;
  },
};

function createBaseMsgCancelPermissionVPLastRequest(): MsgCancelPermissionVPLastRequest {
  return { creator: "", id: 0 };
}

export const MsgCancelPermissionVPLastRequest = {
  encode(message: MsgCancelPermissionVPLastRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCancelPermissionVPLastRequest {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCancelPermissionVPLastRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCancelPermissionVPLastRequest {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
    };
  },

  toJSON(message: MsgCancelPermissionVPLastRequest): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCancelPermissionVPLastRequest>, I>>(
    base?: I,
  ): MsgCancelPermissionVPLastRequest {
    return MsgCancelPermissionVPLastRequest.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCancelPermissionVPLastRequest>, I>>(
    object: I,
  ): MsgCancelPermissionVPLastRequest {
    const message = createBaseMsgCancelPermissionVPLastRequest();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgCancelPermissionVPLastRequestResponse(): MsgCancelPermissionVPLastRequestResponse {
  return {};
}

export const MsgCancelPermissionVPLastRequestResponse = {
  encode(_: MsgCancelPermissionVPLastRequestResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCancelPermissionVPLastRequestResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCancelPermissionVPLastRequestResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgCancelPermissionVPLastRequestResponse {
    return {};
  },

  toJSON(_: MsgCancelPermissionVPLastRequestResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCancelPermissionVPLastRequestResponse>, I>>(
    base?: I,
  ): MsgCancelPermissionVPLastRequestResponse {
    return MsgCancelPermissionVPLastRequestResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCancelPermissionVPLastRequestResponse>, I>>(
    _: I,
  ): MsgCancelPermissionVPLastRequestResponse {
    const message = createBaseMsgCancelPermissionVPLastRequestResponse();
    return message;
  },
};

function createBaseMsgCreateRootPermission(): MsgCreateRootPermission {
  return {
    creator: "",
    schemaId: 0,
    did: "",
    country: "",
    effectiveFrom: undefined,
    effectiveUntil: undefined,
    validationFees: 0,
    issuanceFees: 0,
    verificationFees: 0,
  };
}

export const MsgCreateRootPermission = {
  encode(message: MsgCreateRootPermission, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.schemaId !== 0) {
      writer.uint32(16).uint64(message.schemaId);
    }
    if (message.did !== "") {
      writer.uint32(26).string(message.did);
    }
    if (message.country !== "") {
      writer.uint32(34).string(message.country);
    }
    if (message.effectiveFrom !== undefined) {
      Timestamp.encode(toTimestamp(message.effectiveFrom), writer.uint32(42).fork()).ldelim();
    }
    if (message.effectiveUntil !== undefined) {
      Timestamp.encode(toTimestamp(message.effectiveUntil), writer.uint32(50).fork()).ldelim();
    }
    if (message.validationFees !== 0) {
      writer.uint32(56).uint64(message.validationFees);
    }
    if (message.issuanceFees !== 0) {
      writer.uint32(64).uint64(message.issuanceFees);
    }
    if (message.verificationFees !== 0) {
      writer.uint32(72).uint64(message.verificationFees);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateRootPermission {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCreateRootPermission();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.schemaId = longToNumber(reader.uint64() as Long);
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.did = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.country = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.effectiveFrom = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.effectiveUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.validationFees = longToNumber(reader.uint64() as Long);
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.issuanceFees = longToNumber(reader.uint64() as Long);
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.verificationFees = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCreateRootPermission {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      schemaId: isSet(object.schemaId) ? globalThis.Number(object.schemaId) : 0,
      did: isSet(object.did) ? globalThis.String(object.did) : "",
      country: isSet(object.country) ? globalThis.String(object.country) : "",
      effectiveFrom: isSet(object.effectiveFrom) ? fromJsonTimestamp(object.effectiveFrom) : undefined,
      effectiveUntil: isSet(object.effectiveUntil) ? fromJsonTimestamp(object.effectiveUntil) : undefined,
      validationFees: isSet(object.validationFees) ? globalThis.Number(object.validationFees) : 0,
      issuanceFees: isSet(object.issuanceFees) ? globalThis.Number(object.issuanceFees) : 0,
      verificationFees: isSet(object.verificationFees) ? globalThis.Number(object.verificationFees) : 0,
    };
  },

  toJSON(message: MsgCreateRootPermission): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.schemaId !== 0) {
      obj.schemaId = Math.round(message.schemaId);
    }
    if (message.did !== "") {
      obj.did = message.did;
    }
    if (message.country !== "") {
      obj.country = message.country;
    }
    if (message.effectiveFrom !== undefined) {
      obj.effectiveFrom = message.effectiveFrom.toISOString();
    }
    if (message.effectiveUntil !== undefined) {
      obj.effectiveUntil = message.effectiveUntil.toISOString();
    }
    if (message.validationFees !== 0) {
      obj.validationFees = Math.round(message.validationFees);
    }
    if (message.issuanceFees !== 0) {
      obj.issuanceFees = Math.round(message.issuanceFees);
    }
    if (message.verificationFees !== 0) {
      obj.verificationFees = Math.round(message.verificationFees);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCreateRootPermission>, I>>(base?: I): MsgCreateRootPermission {
    return MsgCreateRootPermission.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCreateRootPermission>, I>>(object: I): MsgCreateRootPermission {
    const message = createBaseMsgCreateRootPermission();
    message.creator = object.creator ?? "";
    message.schemaId = object.schemaId ?? 0;
    message.did = object.did ?? "";
    message.country = object.country ?? "";
    message.effectiveFrom = object.effectiveFrom ?? undefined;
    message.effectiveUntil = object.effectiveUntil ?? undefined;
    message.validationFees = object.validationFees ?? 0;
    message.issuanceFees = object.issuanceFees ?? 0;
    message.verificationFees = object.verificationFees ?? 0;
    return message;
  },
};

function createBaseMsgCreateRootPermissionResponse(): MsgCreateRootPermissionResponse {
  return { id: 0 };
}

export const MsgCreateRootPermissionResponse = {
  encode(message: MsgCreateRootPermissionResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== 0) {
      writer.uint32(8).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateRootPermissionResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCreateRootPermissionResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCreateRootPermissionResponse {
    return { id: isSet(object.id) ? globalThis.Number(object.id) : 0 };
  },

  toJSON(message: MsgCreateRootPermissionResponse): unknown {
    const obj: any = {};
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCreateRootPermissionResponse>, I>>(base?: I): MsgCreateRootPermissionResponse {
    return MsgCreateRootPermissionResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCreateRootPermissionResponse>, I>>(
    object: I,
  ): MsgCreateRootPermissionResponse {
    const message = createBaseMsgCreateRootPermissionResponse();
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgExtendPermission(): MsgExtendPermission {
  return { creator: "", id: 0, effectiveUntil: undefined };
}

export const MsgExtendPermission = {
  encode(message: MsgExtendPermission, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    if (message.effectiveUntil !== undefined) {
      Timestamp.encode(toTimestamp(message.effectiveUntil), writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgExtendPermission {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgExtendPermission();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.effectiveUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgExtendPermission {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
      effectiveUntil: isSet(object.effectiveUntil) ? fromJsonTimestamp(object.effectiveUntil) : undefined,
    };
  },

  toJSON(message: MsgExtendPermission): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    if (message.effectiveUntil !== undefined) {
      obj.effectiveUntil = message.effectiveUntil.toISOString();
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgExtendPermission>, I>>(base?: I): MsgExtendPermission {
    return MsgExtendPermission.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgExtendPermission>, I>>(object: I): MsgExtendPermission {
    const message = createBaseMsgExtendPermission();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    message.effectiveUntil = object.effectiveUntil ?? undefined;
    return message;
  },
};

function createBaseMsgExtendPermissionResponse(): MsgExtendPermissionResponse {
  return {};
}

export const MsgExtendPermissionResponse = {
  encode(_: MsgExtendPermissionResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgExtendPermissionResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgExtendPermissionResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgExtendPermissionResponse {
    return {};
  },

  toJSON(_: MsgExtendPermissionResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgExtendPermissionResponse>, I>>(base?: I): MsgExtendPermissionResponse {
    return MsgExtendPermissionResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgExtendPermissionResponse>, I>>(_: I): MsgExtendPermissionResponse {
    const message = createBaseMsgExtendPermissionResponse();
    return message;
  },
};

function createBaseMsgRevokePermission(): MsgRevokePermission {
  return { creator: "", id: 0 };
}

export const MsgRevokePermission = {
  encode(message: MsgRevokePermission, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevokePermission {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRevokePermission();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgRevokePermission {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
    };
  },

  toJSON(message: MsgRevokePermission): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRevokePermission>, I>>(base?: I): MsgRevokePermission {
    return MsgRevokePermission.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRevokePermission>, I>>(object: I): MsgRevokePermission {
    const message = createBaseMsgRevokePermission();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgRevokePermissionResponse(): MsgRevokePermissionResponse {
  return {};
}

export const MsgRevokePermissionResponse = {
  encode(_: MsgRevokePermissionResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevokePermissionResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRevokePermissionResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgRevokePermissionResponse {
    return {};
  },

  toJSON(_: MsgRevokePermissionResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRevokePermissionResponse>, I>>(base?: I): MsgRevokePermissionResponse {
    return MsgRevokePermissionResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRevokePermissionResponse>, I>>(_: I): MsgRevokePermissionResponse {
    const message = createBaseMsgRevokePermissionResponse();
    return message;
  },
};

function createBaseMsgCreateOrUpdatePermissionSession(): MsgCreateOrUpdatePermissionSession {
  return { creator: "", id: "", issuerPermId: 0, verifierPermId: 0, agentPermId: 0, walletAgentPermId: 0 };
}

export const MsgCreateOrUpdatePermissionSession = {
  encode(message: MsgCreateOrUpdatePermissionSession, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== "") {
      writer.uint32(18).string(message.id);
    }
    if (message.issuerPermId !== 0) {
      writer.uint32(24).uint64(message.issuerPermId);
    }
    if (message.verifierPermId !== 0) {
      writer.uint32(32).uint64(message.verifierPermId);
    }
    if (message.agentPermId !== 0) {
      writer.uint32(40).uint64(message.agentPermId);
    }
    if (message.walletAgentPermId !== 0) {
      writer.uint32(48).uint64(message.walletAgentPermId);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateOrUpdatePermissionSession {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCreateOrUpdatePermissionSession();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.id = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.issuerPermId = longToNumber(reader.uint64() as Long);
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.verifierPermId = longToNumber(reader.uint64() as Long);
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.agentPermId = longToNumber(reader.uint64() as Long);
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.walletAgentPermId = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCreateOrUpdatePermissionSession {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      issuerPermId: isSet(object.issuerPermId) ? globalThis.Number(object.issuerPermId) : 0,
      verifierPermId: isSet(object.verifierPermId) ? globalThis.Number(object.verifierPermId) : 0,
      agentPermId: isSet(object.agentPermId) ? globalThis.Number(object.agentPermId) : 0,
      walletAgentPermId: isSet(object.walletAgentPermId) ? globalThis.Number(object.walletAgentPermId) : 0,
    };
  },

  toJSON(message: MsgCreateOrUpdatePermissionSession): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.issuerPermId !== 0) {
      obj.issuerPermId = Math.round(message.issuerPermId);
    }
    if (message.verifierPermId !== 0) {
      obj.verifierPermId = Math.round(message.verifierPermId);
    }
    if (message.agentPermId !== 0) {
      obj.agentPermId = Math.round(message.agentPermId);
    }
    if (message.walletAgentPermId !== 0) {
      obj.walletAgentPermId = Math.round(message.walletAgentPermId);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCreateOrUpdatePermissionSession>, I>>(
    base?: I,
  ): MsgCreateOrUpdatePermissionSession {
    return MsgCreateOrUpdatePermissionSession.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCreateOrUpdatePermissionSession>, I>>(
    object: I,
  ): MsgCreateOrUpdatePermissionSession {
    const message = createBaseMsgCreateOrUpdatePermissionSession();
    message.creator = object.creator ?? "";
    message.id = object.id ?? "";
    message.issuerPermId = object.issuerPermId ?? 0;
    message.verifierPermId = object.verifierPermId ?? 0;
    message.agentPermId = object.agentPermId ?? 0;
    message.walletAgentPermId = object.walletAgentPermId ?? 0;
    return message;
  },
};

function createBaseMsgCreateOrUpdatePermissionSessionResponse(): MsgCreateOrUpdatePermissionSessionResponse {
  return { id: "" };
}

export const MsgCreateOrUpdatePermissionSessionResponse = {
  encode(message: MsgCreateOrUpdatePermissionSessionResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateOrUpdatePermissionSessionResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCreateOrUpdatePermissionSessionResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCreateOrUpdatePermissionSessionResponse {
    return { id: isSet(object.id) ? globalThis.String(object.id) : "" };
  },

  toJSON(message: MsgCreateOrUpdatePermissionSessionResponse): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCreateOrUpdatePermissionSessionResponse>, I>>(
    base?: I,
  ): MsgCreateOrUpdatePermissionSessionResponse {
    return MsgCreateOrUpdatePermissionSessionResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCreateOrUpdatePermissionSessionResponse>, I>>(
    object: I,
  ): MsgCreateOrUpdatePermissionSessionResponse {
    const message = createBaseMsgCreateOrUpdatePermissionSessionResponse();
    message.id = object.id ?? "";
    return message;
  },
};

function createBaseMsgSlashPermissionTrustDeposit(): MsgSlashPermissionTrustDeposit {
  return { creator: "", id: 0, amount: 0 };
}

export const MsgSlashPermissionTrustDeposit = {
  encode(message: MsgSlashPermissionTrustDeposit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    if (message.amount !== 0) {
      writer.uint32(24).uint64(message.amount);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSlashPermissionTrustDeposit {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgSlashPermissionTrustDeposit();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.amount = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgSlashPermissionTrustDeposit {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
      amount: isSet(object.amount) ? globalThis.Number(object.amount) : 0,
    };
  },

  toJSON(message: MsgSlashPermissionTrustDeposit): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    if (message.amount !== 0) {
      obj.amount = Math.round(message.amount);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgSlashPermissionTrustDeposit>, I>>(base?: I): MsgSlashPermissionTrustDeposit {
    return MsgSlashPermissionTrustDeposit.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgSlashPermissionTrustDeposit>, I>>(
    object: I,
  ): MsgSlashPermissionTrustDeposit {
    const message = createBaseMsgSlashPermissionTrustDeposit();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    message.amount = object.amount ?? 0;
    return message;
  },
};

function createBaseMsgSlashPermissionTrustDepositResponse(): MsgSlashPermissionTrustDepositResponse {
  return {};
}

export const MsgSlashPermissionTrustDepositResponse = {
  encode(_: MsgSlashPermissionTrustDepositResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSlashPermissionTrustDepositResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgSlashPermissionTrustDepositResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgSlashPermissionTrustDepositResponse {
    return {};
  },

  toJSON(_: MsgSlashPermissionTrustDepositResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgSlashPermissionTrustDepositResponse>, I>>(
    base?: I,
  ): MsgSlashPermissionTrustDepositResponse {
    return MsgSlashPermissionTrustDepositResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgSlashPermissionTrustDepositResponse>, I>>(
    _: I,
  ): MsgSlashPermissionTrustDepositResponse {
    const message = createBaseMsgSlashPermissionTrustDepositResponse();
    return message;
  },
};

function createBaseMsgRepayPermissionSlashedTrustDeposit(): MsgRepayPermissionSlashedTrustDeposit {
  return { creator: "", id: 0 };
}

export const MsgRepayPermissionSlashedTrustDeposit = {
  encode(message: MsgRepayPermissionSlashedTrustDeposit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.id !== 0) {
      writer.uint32(16).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRepayPermissionSlashedTrustDeposit {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRepayPermissionSlashedTrustDeposit();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgRepayPermissionSlashedTrustDeposit {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      id: isSet(object.id) ? globalThis.Number(object.id) : 0,
    };
  },

  toJSON(message: MsgRepayPermissionSlashedTrustDeposit): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRepayPermissionSlashedTrustDeposit>, I>>(
    base?: I,
  ): MsgRepayPermissionSlashedTrustDeposit {
    return MsgRepayPermissionSlashedTrustDeposit.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRepayPermissionSlashedTrustDeposit>, I>>(
    object: I,
  ): MsgRepayPermissionSlashedTrustDeposit {
    const message = createBaseMsgRepayPermissionSlashedTrustDeposit();
    message.creator = object.creator ?? "";
    message.id = object.id ?? 0;
    return message;
  },
};

function createBaseMsgRepayPermissionSlashedTrustDepositResponse(): MsgRepayPermissionSlashedTrustDepositResponse {
  return {};
}

export const MsgRepayPermissionSlashedTrustDepositResponse = {
  encode(_: MsgRepayPermissionSlashedTrustDepositResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRepayPermissionSlashedTrustDepositResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgRepayPermissionSlashedTrustDepositResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): MsgRepayPermissionSlashedTrustDepositResponse {
    return {};
  },

  toJSON(_: MsgRepayPermissionSlashedTrustDepositResponse): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgRepayPermissionSlashedTrustDepositResponse>, I>>(
    base?: I,
  ): MsgRepayPermissionSlashedTrustDepositResponse {
    return MsgRepayPermissionSlashedTrustDepositResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgRepayPermissionSlashedTrustDepositResponse>, I>>(
    _: I,
  ): MsgRepayPermissionSlashedTrustDepositResponse {
    const message = createBaseMsgRepayPermissionSlashedTrustDepositResponse();
    return message;
  },
};

function createBaseMsgCreatePermission(): MsgCreatePermission {
  return {
    creator: "",
    schemaId: 0,
    type: 0,
    did: "",
    country: "",
    effectiveFrom: undefined,
    effectiveUntil: undefined,
    verificationFees: 0,
  };
}

export const MsgCreatePermission = {
  encode(message: MsgCreatePermission, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.creator !== "") {
      writer.uint32(10).string(message.creator);
    }
    if (message.schemaId !== 0) {
      writer.uint32(16).uint64(message.schemaId);
    }
    if (message.type !== 0) {
      writer.uint32(24).int32(message.type);
    }
    if (message.did !== "") {
      writer.uint32(34).string(message.did);
    }
    if (message.country !== "") {
      writer.uint32(42).string(message.country);
    }
    if (message.effectiveFrom !== undefined) {
      Timestamp.encode(toTimestamp(message.effectiveFrom), writer.uint32(50).fork()).ldelim();
    }
    if (message.effectiveUntil !== undefined) {
      Timestamp.encode(toTimestamp(message.effectiveUntil), writer.uint32(58).fork()).ldelim();
    }
    if (message.verificationFees !== 0) {
      writer.uint32(64).uint64(message.verificationFees);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreatePermission {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCreatePermission();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.creator = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.schemaId = longToNumber(reader.uint64() as Long);
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.type = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.did = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.country = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.effectiveFrom = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.effectiveUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.verificationFees = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCreatePermission {
    return {
      creator: isSet(object.creator) ? globalThis.String(object.creator) : "",
      schemaId: isSet(object.schemaId) ? globalThis.Number(object.schemaId) : 0,
      type: isSet(object.type) ? permissionTypeFromJSON(object.type) : 0,
      did: isSet(object.did) ? globalThis.String(object.did) : "",
      country: isSet(object.country) ? globalThis.String(object.country) : "",
      effectiveFrom: isSet(object.effectiveFrom) ? fromJsonTimestamp(object.effectiveFrom) : undefined,
      effectiveUntil: isSet(object.effectiveUntil) ? fromJsonTimestamp(object.effectiveUntil) : undefined,
      verificationFees: isSet(object.verificationFees) ? globalThis.Number(object.verificationFees) : 0,
    };
  },

  toJSON(message: MsgCreatePermission): unknown {
    const obj: any = {};
    if (message.creator !== "") {
      obj.creator = message.creator;
    }
    if (message.schemaId !== 0) {
      obj.schemaId = Math.round(message.schemaId);
    }
    if (message.type !== 0) {
      obj.type = permissionTypeToJSON(message.type);
    }
    if (message.did !== "") {
      obj.did = message.did;
    }
    if (message.country !== "") {
      obj.country = message.country;
    }
    if (message.effectiveFrom !== undefined) {
      obj.effectiveFrom = message.effectiveFrom.toISOString();
    }
    if (message.effectiveUntil !== undefined) {
      obj.effectiveUntil = message.effectiveUntil.toISOString();
    }
    if (message.verificationFees !== 0) {
      obj.verificationFees = Math.round(message.verificationFees);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCreatePermission>, I>>(base?: I): MsgCreatePermission {
    return MsgCreatePermission.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCreatePermission>, I>>(object: I): MsgCreatePermission {
    const message = createBaseMsgCreatePermission();
    message.creator = object.creator ?? "";
    message.schemaId = object.schemaId ?? 0;
    message.type = object.type ?? 0;
    message.did = object.did ?? "";
    message.country = object.country ?? "";
    message.effectiveFrom = object.effectiveFrom ?? undefined;
    message.effectiveUntil = object.effectiveUntil ?? undefined;
    message.verificationFees = object.verificationFees ?? 0;
    return message;
  },
};

function createBaseMsgCreatePermissionResponse(): MsgCreatePermissionResponse {
  return { id: 0 };
}

export const MsgCreatePermissionResponse = {
  encode(message: MsgCreatePermissionResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== 0) {
      writer.uint32(8).uint64(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreatePermissionResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgCreatePermissionResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.id = longToNumber(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgCreatePermissionResponse {
    return { id: isSet(object.id) ? globalThis.Number(object.id) : 0 };
  },

  toJSON(message: MsgCreatePermissionResponse): unknown {
    const obj: any = {};
    if (message.id !== 0) {
      obj.id = Math.round(message.id);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgCreatePermissionResponse>, I>>(base?: I): MsgCreatePermissionResponse {
    return MsgCreatePermissionResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgCreatePermissionResponse>, I>>(object: I): MsgCreatePermissionResponse {
    const message = createBaseMsgCreatePermissionResponse();
    message.id = object.id ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function toTimestamp(date: Date): Timestamp {
  const seconds = Math.trunc(date.getTime() / 1_000);
  const nanos = (date.getTime() % 1_000) * 1_000_000;
  return { seconds, nanos };
}

function fromTimestamp(t: Timestamp): Date {
  let millis = (t.seconds || 0) * 1_000;
  millis += (t.nanos || 0) / 1_000_000;
  return new globalThis.Date(millis);
}

function fromJsonTimestamp(o: any): Date {
  if (o instanceof globalThis.Date) {
    return o;
  } else if (typeof o === "string") {
    return new globalThis.Date(o);
  } else {
    return fromTimestamp(Timestamp.fromJSON(o));
  }
}

function longToNumber(long: Long): number {
  if (long.gt(globalThis.Number.MAX_SAFE_INTEGER)) {
    throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
  }
  if (long.lt(globalThis.Number.MIN_SAFE_INTEGER)) {
    throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");
  }
  return long.toNumber();
}

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
