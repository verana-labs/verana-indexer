syntax = "proto3";
package verana.perm.v1;

import "params.proto";
import "types.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/verana-labs/verana-blockchain/x/permission/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse);
  rpc ListPermissions(QueryListPermissionsRequest) returns (QueryListPermissionsResponse);
  rpc GetPermission(QueryGetPermissionRequest) returns (QueryGetPermissionResponse);
  rpc GetPermissionSession(QueryGetPermissionSessionRequest) returns (QueryGetPermissionSessionResponse);
  rpc ListPermissionSessions(QueryListPermissionSessionsRequest) returns (QueryListPermissionSessionsResponse);
  rpc FindPermissionsWithDID(QueryFindPermissionsWithDIDRequest) returns (QueryFindPermissionsWithDIDResponse);
  rpc FindBeneficiaries(QueryFindBeneficiariesRequest) returns (QueryFindBeneficiariesResponse);
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1;
}

message QueryListPermissionsRequest {
  google.protobuf.Timestamp modified_after = 1;
  uint32 response_max_size = 2;  // Default 64, min 1, max 1024
}

message QueryListPermissionsResponse {
  repeated Permission permissions = 1;
}

message QueryGetPermissionRequest {
  uint64 id = 1;
}

message QueryGetPermissionResponse {
  Permission permission = 1;
}

message QueryGetPermissionSessionRequest {
  string id = 1;  // UUID
}

message QueryGetPermissionSessionResponse {
  PermissionSession session = 1;
}

message QueryListPermissionSessionsRequest {
  google.protobuf.Timestamp modified_after = 1;
  uint32 response_max_size = 2;
}

message QueryListPermissionSessionsResponse {
  repeated PermissionSession sessions = 1;
}

message QueryFindPermissionsWithDIDRequest {
  string did = 1;
  uint32 type = 2;
  uint64 schema_id = 3;
  string country = 4;
  google.protobuf.Timestamp when = 5;
}

message QueryFindPermissionsWithDIDResponse {
  repeated Permission permissions = 1;
}

message QueryFindBeneficiariesRequest {
  uint64 issuer_perm_id = 1;
  uint64 verifier_perm_id = 2;
}

message QueryFindBeneficiariesResponse {
  repeated Permission permissions = 1;
}