// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v5.29.3
// source: verana/td/v1/params.proto

/* eslint-disable */
import Long from "long";
import _m0 from "protobufjs/minimal";

export const protobufPackage = "verana.td.v1";

/** Params defines the parameters for the module. */
export interface Params {
  trustDepositReclaimBurnRate: string;
  trustDepositShareValue: string;
  trustDepositRate: string;
  walletUserAgentRewardRate: string;
  userAgentRewardRate: string;
}

function createBaseParams(): Params {
  return {
    trustDepositReclaimBurnRate: "",
    trustDepositShareValue: "",
    trustDepositRate: "",
    walletUserAgentRewardRate: "",
    userAgentRewardRate: "",
  };
}

export const Params = {
  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.trustDepositReclaimBurnRate !== "") {
      writer.uint32(10).string(message.trustDepositReclaimBurnRate);
    }
    if (message.trustDepositShareValue !== "") {
      writer.uint32(18).string(message.trustDepositShareValue);
    }
    if (message.trustDepositRate !== "") {
      writer.uint32(26).string(message.trustDepositRate);
    }
    if (message.walletUserAgentRewardRate !== "") {
      writer.uint32(34).string(message.walletUserAgentRewardRate);
    }
    if (message.userAgentRewardRate !== "") {
      writer.uint32(42).string(message.userAgentRewardRate);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Params {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseParams();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.trustDepositReclaimBurnRate = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.trustDepositShareValue = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.trustDepositRate = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.walletUserAgentRewardRate = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.userAgentRewardRate = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Params {
    return {
      trustDepositReclaimBurnRate: isSet(object.trustDepositReclaimBurnRate)
        ? globalThis.String(object.trustDepositReclaimBurnRate)
        : "",
      trustDepositShareValue: isSet(object.trustDepositShareValue)
        ? globalThis.String(object.trustDepositShareValue)
        : "",
      trustDepositRate: isSet(object.trustDepositRate) ? globalThis.String(object.trustDepositRate) : "",
      walletUserAgentRewardRate: isSet(object.walletUserAgentRewardRate)
        ? globalThis.String(object.walletUserAgentRewardRate)
        : "",
      userAgentRewardRate: isSet(object.userAgentRewardRate) ? globalThis.String(object.userAgentRewardRate) : "",
    };
  },

  toJSON(message: Params): unknown {
    const obj: any = {};
    if (message.trustDepositReclaimBurnRate !== "") {
      obj.trustDepositReclaimBurnRate = message.trustDepositReclaimBurnRate;
    }
    if (message.trustDepositShareValue !== "") {
      obj.trustDepositShareValue = message.trustDepositShareValue;
    }
    if (message.trustDepositRate !== "") {
      obj.trustDepositRate = message.trustDepositRate;
    }
    if (message.walletUserAgentRewardRate !== "") {
      obj.walletUserAgentRewardRate = message.walletUserAgentRewardRate;
    }
    if (message.userAgentRewardRate !== "") {
      obj.userAgentRewardRate = message.userAgentRewardRate;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Params>, I>>(base?: I): Params {
    return Params.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Params>, I>>(object: I): Params {
    const message = createBaseParams();
    message.trustDepositReclaimBurnRate = object.trustDepositReclaimBurnRate ?? "";
    message.trustDepositShareValue = object.trustDepositShareValue ?? "";
    message.trustDepositRate = object.trustDepositRate ?? "";
    message.walletUserAgentRewardRate = object.walletUserAgentRewardRate ?? "";
    message.userAgentRewardRate = object.userAgentRewardRate ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
