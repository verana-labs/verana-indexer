// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v5.29.3
// source: verana/cs/v1/params.proto

/* eslint-disable */
import Long from "long";
import _m0 from "protobufjs/minimal";

export const protobufPackage = "verana.cs.v1";

/** Params defines the parameters for the module. */
export interface Params {
  credentialSchemaTrustDeposit: Long;
  credentialSchemaSchemaMaxSize: Long;
  credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays: number;
  credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays: number;
  credentialSchemaIssuerValidationValidityPeriodMaxDays: number;
  credentialSchemaVerifierValidationValidityPeriodMaxDays: number;
  credentialSchemaHolderValidationValidityPeriodMaxDays: number;
}

function createBaseParams(): Params {
  return {
    credentialSchemaTrustDeposit: Long.UZERO,
    credentialSchemaSchemaMaxSize: Long.UZERO,
    credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays: 0,
    credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays: 0,
    credentialSchemaIssuerValidationValidityPeriodMaxDays: 0,
    credentialSchemaVerifierValidationValidityPeriodMaxDays: 0,
    credentialSchemaHolderValidationValidityPeriodMaxDays: 0,
  };
}

export const Params = {
  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (!message.credentialSchemaTrustDeposit.equals(Long.UZERO)) {
      writer.uint32(8).uint64(message.credentialSchemaTrustDeposit);
    }
    if (!message.credentialSchemaSchemaMaxSize.equals(Long.UZERO)) {
      writer.uint32(16).uint64(message.credentialSchemaSchemaMaxSize);
    }
    if (message.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays !== 0) {
      writer.uint32(24).uint32(message.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays);
    }
    if (message.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays !== 0) {
      writer.uint32(32).uint32(message.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays);
    }
    if (message.credentialSchemaIssuerValidationValidityPeriodMaxDays !== 0) {
      writer.uint32(40).uint32(message.credentialSchemaIssuerValidationValidityPeriodMaxDays);
    }
    if (message.credentialSchemaVerifierValidationValidityPeriodMaxDays !== 0) {
      writer.uint32(48).uint32(message.credentialSchemaVerifierValidationValidityPeriodMaxDays);
    }
    if (message.credentialSchemaHolderValidationValidityPeriodMaxDays !== 0) {
      writer.uint32(56).uint32(message.credentialSchemaHolderValidationValidityPeriodMaxDays);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Params {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseParams();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.credentialSchemaTrustDeposit = reader.uint64() as Long;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.credentialSchemaSchemaMaxSize = reader.uint64() as Long;
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays = reader.uint32();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays = reader.uint32();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.credentialSchemaIssuerValidationValidityPeriodMaxDays = reader.uint32();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.credentialSchemaVerifierValidationValidityPeriodMaxDays = reader.uint32();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.credentialSchemaHolderValidationValidityPeriodMaxDays = reader.uint32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Params {
    return {
      credentialSchemaTrustDeposit: isSet(object.credentialSchemaTrustDeposit)
        ? Long.fromValue(object.credentialSchemaTrustDeposit)
        : Long.UZERO,
      credentialSchemaSchemaMaxSize: isSet(object.credentialSchemaSchemaMaxSize)
        ? Long.fromValue(object.credentialSchemaSchemaMaxSize)
        : Long.UZERO,
      credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays:
        isSet(object.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays)
          ? globalThis.Number(object.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays)
          : 0,
      credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays:
        isSet(object.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays)
          ? globalThis.Number(object.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays)
          : 0,
      credentialSchemaIssuerValidationValidityPeriodMaxDays:
        isSet(object.credentialSchemaIssuerValidationValidityPeriodMaxDays)
          ? globalThis.Number(object.credentialSchemaIssuerValidationValidityPeriodMaxDays)
          : 0,
      credentialSchemaVerifierValidationValidityPeriodMaxDays:
        isSet(object.credentialSchemaVerifierValidationValidityPeriodMaxDays)
          ? globalThis.Number(object.credentialSchemaVerifierValidationValidityPeriodMaxDays)
          : 0,
      credentialSchemaHolderValidationValidityPeriodMaxDays:
        isSet(object.credentialSchemaHolderValidationValidityPeriodMaxDays)
          ? globalThis.Number(object.credentialSchemaHolderValidationValidityPeriodMaxDays)
          : 0,
    };
  },

  toJSON(message: Params): unknown {
    const obj: any = {};
    if (!message.credentialSchemaTrustDeposit.equals(Long.UZERO)) {
      obj.credentialSchemaTrustDeposit = (message.credentialSchemaTrustDeposit || Long.UZERO).toString();
    }
    if (!message.credentialSchemaSchemaMaxSize.equals(Long.UZERO)) {
      obj.credentialSchemaSchemaMaxSize = (message.credentialSchemaSchemaMaxSize || Long.UZERO).toString();
    }
    if (message.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays !== 0) {
      obj.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays = Math.round(
        message.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays,
      );
    }
    if (message.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays !== 0) {
      obj.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays = Math.round(
        message.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays,
      );
    }
    if (message.credentialSchemaIssuerValidationValidityPeriodMaxDays !== 0) {
      obj.credentialSchemaIssuerValidationValidityPeriodMaxDays = Math.round(
        message.credentialSchemaIssuerValidationValidityPeriodMaxDays,
      );
    }
    if (message.credentialSchemaVerifierValidationValidityPeriodMaxDays !== 0) {
      obj.credentialSchemaVerifierValidationValidityPeriodMaxDays = Math.round(
        message.credentialSchemaVerifierValidationValidityPeriodMaxDays,
      );
    }
    if (message.credentialSchemaHolderValidationValidityPeriodMaxDays !== 0) {
      obj.credentialSchemaHolderValidationValidityPeriodMaxDays = Math.round(
        message.credentialSchemaHolderValidationValidityPeriodMaxDays,
      );
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Params>, I>>(base?: I): Params {
    return Params.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Params>, I>>(object: I): Params {
    const message = createBaseParams();
    message.credentialSchemaTrustDeposit =
      (object.credentialSchemaTrustDeposit !== undefined && object.credentialSchemaTrustDeposit !== null)
        ? Long.fromValue(object.credentialSchemaTrustDeposit)
        : Long.UZERO;
    message.credentialSchemaSchemaMaxSize =
      (object.credentialSchemaSchemaMaxSize !== undefined && object.credentialSchemaSchemaMaxSize !== null)
        ? Long.fromValue(object.credentialSchemaSchemaMaxSize)
        : Long.UZERO;
    message.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays =
      object.credentialSchemaIssuerGrantorValidationValidityPeriodMaxDays ?? 0;
    message.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays =
      object.credentialSchemaVerifierGrantorValidationValidityPeriodMaxDays ?? 0;
    message.credentialSchemaIssuerValidationValidityPeriodMaxDays =
      object.credentialSchemaIssuerValidationValidityPeriodMaxDays ?? 0;
    message.credentialSchemaVerifierValidationValidityPeriodMaxDays =
      object.credentialSchemaVerifierValidationValidityPeriodMaxDays ?? 0;
    message.credentialSchemaHolderValidationValidityPeriodMaxDays =
      object.credentialSchemaHolderValidationValidityPeriodMaxDays ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
